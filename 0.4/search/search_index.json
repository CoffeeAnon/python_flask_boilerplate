{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Readme","text":"<p>Run with:</p> <pre><code>export FLASK_APP=my_app.app\npoetry run flask run\n</code></pre> <p>Verify flask db script (dev):</p> <pre><code>export FLASK_APP=my_app.app\npoetry run flask db check -d my_app/migrations_dev\n</code></pre> <p>Change the .env file value of FLASK_ENV to dev to verify flask db script (prod):</p> <pre><code>unset FLASK_ENV\nexport FLASK_APP=my_app.app\npoetry run flask db check -d my_app/migrations_prod\n</code></pre>"},{"location":"#environment-management","title":"Environment management","text":"<p>This project uses tox and poetry, and if a dev machine is also using pyenv, the number of environments to manage gets pretty high.</p> <p>You can use pyenv to manage the global python version, but this project works well with poetry set up to create project-specific environments.</p>"},{"location":"#dependencies","title":"Dependencies","text":"<ol> <li>For local dev, install dev dependencies and test dependencies in the poetry environment. The test dependencies are useful for non-tox test running, like vscode runners.</li> <li>For CI, install test dependencies.</li> <li>For production, only install production dependencies</li> </ol> <p>Warning</p> <p>Do NOT install test and dev dependencies in production</p> <p>Tox can run tests locally and also runs tests in circleci</p> <ul> <li>Use extras to install test dependencies</li> <li>Use dev for anything needed for running locally but not needed for testing (e.g. debugpy)</li> <li>Install extras in tox, and in the local dev environment</li> <li>Exclude dev from docker compose</li> </ul> <p>From Poetry docs re groups: \"Installing (groups) is only possible by using Poetry.\"</p> <p>To run tox 4:</p> <pre><code>tox p -e ALL -c tox.ini --verbose\n</code></pre> <p>or</p> <pre><code>tox r -e mypy -c tox.ini --verbose\n</code></pre>"},{"location":"#mkdocs","title":"mkdocs","text":"<p>Deploy mkdocs with <code>poetry run mike deploy --push --update-aliases 0.1 latest</code> Set default for mkdocs to <code>latest</code> with <code>poetry run mike set-default latest</code></p>"}]}