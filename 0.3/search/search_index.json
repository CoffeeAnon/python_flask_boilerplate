{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Readme","text":"<p>Run with:</p> <pre><code>export FLASK_APP=my_app.app\npoetry run flask run\n</code></pre> <p>Verify flask db script (dev):</p> <pre><code>export FLASK_APP=my_app.app\npoetry run flask db check -d my_app/migrations_dev\n</code></pre> <p>Change the .env file value of FLASK_ENV to dev to verify flask db script (prod):</p> <pre><code>unset FLASK_ENV\nexport FLASK_APP=my_app.app\npoetry run flask db check -d my_app/migrations_prod\n</code></pre>"},{"location":"#decisions-around-pyproject-tox-and-poetry","title":"Decisions around pyproject, tox, and poetry","text":""},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Install dev dependencies and test dependencies locally</li> <li>Install test dependencies from circleci</li> <li>Do NOT install test and dev dependencies in production</li> </ul> <p>Tox can run tests locally and also runs tests in circleci</p> <ul> <li>Use extras to install test dependencies</li> <li>Use dev for anything needed for running locally but not needed for testing (e.g. debugpy)</li> <li>Install extras in tox, and in the local dev environment</li> <li>Exclude dev from docker compose</li> </ul> <p>From Poetry docs re groups: \"Installing (groups) is only possible by using Poetry.\"</p> <p>To run tox 4:</p> <pre><code>tox p -e ALL -c tox.ini --verbose\n</code></pre> <p>or</p> <pre><code>tox r -e mypy -c tox.ini --verbose\n</code></pre>"}]}